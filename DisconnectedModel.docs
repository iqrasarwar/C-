A dataset provides us index-based access to data so we can get the data from any location.
Dataset is a collection of tables where each table is represented as a DataTable class and identified by the index position.
 
Methods of DataAdapter
Fill (DataSet ds,string TableName).
Update (DataSet ds,string TableName)
Fill is the method to load data from a DataSource into a DataSet.
 When we call the Fill() method of Adapter, the following action takes place internally.
Open a connection with the DataSource.
Execute the Select command under it on the DataSource and load data from the table to the DataSet.
Close the Connection.
Fill requires a select statement to get to know which data it is supposed to select from the database and fill in the inMemory objects.
 
DataTable user = new DataTable();
string con = @"Data Source=(localdb)\ProjectsV13;Initialâ€¦.";
            SqlConnection conn = new SqlConnection(con);
            string query = "SELECT * FROM user";
            SqlCommand cmd = new SqlCommand(query, conn);
            SqlDataAdapter da = new SqlDataAdapter();
            da.SelectCommand = cmd;
            da.Fill(user);
 
Update is to transfer data from a DataSet to a DataSource.
Since a DataSet is updatable, changes can be made to data that is loaded into it, like adding, modifying and deleting records.
After making all the changes to the data in a dataset if we want to send those changes back to the DataSource then call the Update() method on the DataAdapter that performed the following:
Re-opened a connection with the DataSource.
Changes made in the dataset will be sent back to the table where in this process it will use the insert, update and delete commands of the DataAdapter.
Close the Connection.
Update requires a query to get to know which data it is supposed to put in the database.
 
DataAdapter is internally a collection of the following 4 methods:
Select Command.
Insert Command.
Update Command.
Delete Command.

https://www.c-sharpcorner.com/UploadFile/8af593/ado-net-dis-connected-architecture/
https://www.c-sharpcorner.com/UploadFile/8a67c0/connected-vs-disconnected-architecture-in-C-Sharp/
